package servlets;
import util.*;
import java.util.*;
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import service.UserService;
public class UserServlet extends HttpServlet{
	 public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	    	doPost(request,response);
		}
	 @SuppressWarnings("rawtypes")
	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		 request.setCharacterEncoding("UTF-8");
		 String requestPath=request.getRequestURI();
		 int i=requestPath.lastIndexOf('/');
		 String path=requestPath.substring(i);
		 System.out.println(requestPath);
		 System.out.println(path);
		 RequestDispatcher rd=null;
		 //创建模拟层对象
		 UserService us=new UserService();
		 if(path.equals("/listAll")){
			 //所有文件显示功能，带分页处理功能
			 //获得要显示的页数
			 String page=request.getParameter("page");
			 System.out.println(page);
			 //当前的页数
			 int curPage=0;
			 //没有获得page值得处理
			 if(page==null||page.length()<1){
				 curPage=1;
			 }else{
				 curPage=Integer.parseInt(page);
			 }
			 PageBean pageBean=us.listAll(curPage);
			 request.setAttribute("pageBean", pageBean);
			 rd=request.getRequestDispatcher("/listAll.jsp");
			 rd.forward(request,response);
		 }else if(path.equals("/top")){//排行榜的显示，下载文件次数最高的前10位
			 List top=us.topList();
			 request.setAttribute("top", top);
			 System.out.println("这是top");
			 System.out.println(top);
			 request.getRequestDispatcher("/topList.jsp").forward(request,response);
		 }else if(path.equals("/show")){
			 //显示单个文件的具体信息
			 String id=request.getParameter("id");
			 Map file=us.getById(id);
			 request.setAttribute("file", file);
			 request.getRequestDispatcher("/showFile.jsp").forward(request,response); 
		 }else if(path.equals("/sort")){
			 //分类显示，带分页功能
			 String type=request.getParameter("type");
			 //所有文件显示功能，带分页处理功能
			 //获取要显示的页数
			 String page=request.getParameter("page");
			 int curPage=0;
			 if(page==null||page.length()<1){
				 curPage=1;
			 }else{
				 curPage=Integer.parseInt(page);
			 }
			 PageBean pageBean=us.listSort(type, curPage);
			 request.setAttribute("pageBean", pageBean);
			 request.getRequestDispatcher("/sortList.jsp").forward(request,response); 
		 }else if(path.equals("/search")){
			 //分类搜索，带分页功能，搜索条件为类别+文件说明中的关键字
			 String type=request.getParameter("type");
			 String name=request.getParameter("name");
			 //获得要显示的页数
			 String page=request.getParameter("page");
			 int curPage=0;
			 if(page==null||page.length()<1){
				 curPage=1;
			 }else{
				 curPage=Integer.parseInt(page);
			 }
			 PageBean pageBean=us.search(type,name,curPage);
			 request.setAttribute("pageBean", pageBean);
			 request.getRequestDispatcher("/searchList.jsp").forward(request,response); 
		 }else if(path.equals("/add")){
			 String uploadPath="/software";
			 FileUtil fu=new FileUtil();
			 int r=fu.upload(this.getServletContext(),request,response,uploadPath);
			 if(r==1&&us.add(fu.getFile(),fu.getParameters())==1){
				request.setAttribute("result","添加成功!");
				request.setAttribute("list", "/UserServlet/listAll");
				request.setAttribute("uploaduser",request.getSession().getAttribute("loginusername"));
			 }else{
				 request.setAttribute("list", "/UserServlet/listAll");
				 request.setAttribute("result","添加失败！");
			 }
			 request.getRequestDispatcher("/result.jsp").forward(request,response); 
		 }else if(path.equals("/sysemail")){
			 request.getRequestDispatcher("/sysemail.jsp").forward(request,response);
		 }
}
}